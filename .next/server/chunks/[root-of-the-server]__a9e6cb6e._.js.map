{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///Users/gnickles/Desktop/AspFumi_Site/src/app/api/admin/isolates/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { parse } from 'csv-parse/sync';\nimport { stringify } from 'csv-stringify/sync';\n\ninterface IsolateData {\n  id: string;\n  [key: string]: string;\n}\n\nconst dataDir = path.join(process.cwd(), 'data');\nconst tsvFilePath = path.join(dataDir, 'isolate_submissions.tsv');\nconst jsonFilePath = path.join(dataDir, 'isolates.json');\n\n// --- Helper function to read and parse the TSV file ---\nasync function readTsv(): Promise<IsolateData[]> {\n  try {\n    await fs.access(tsvFilePath);\n    const fileContent = await fs.readFile(tsvFilePath, 'utf-8');\n    const records = parse(fileContent, {\n      delimiter: '\\t',\n      columns: true,\n      skip_empty_lines: true,\n    });\n    return records.map((rec: any, index: number) => ({ id: rec.timestamp || `row-${index}`, ...rec }));\n  } catch {\n    return [];\n  }\n}\n\n// --- Helper function to write data back to TSV and JSON ---\nasync function writeData(data: IsolateData[]) {\n    // Write to TSV\n    if (data.length > 0) {\n        const dataToWrite = data.map(({ id, ...rest }) => rest);\n        const tsvString = stringify(dataToWrite, { header: true, delimiter: '\\t' });\n        await fs.writeFile(tsvFilePath, tsvString);\n    } else {\n         await fs.unlink(tsvFilePath).catch(() => {});\n    }\n\n    // Write to JSON\n    const dataToWriteJson = data.map(({ id, ...rest }) => ({id, ...rest}));\n    await fs.writeFile(jsonFilePath, JSON.stringify(dataToWriteJson, null, 2));\n}\n\n// --- API Methods ---\n\nexport async function GET() {\n  const submissions = await readTsv();\n  return NextResponse.json({ submissions });\n}\n\nexport async function PUT(request: NextRequest) {\n  const updatedRow: IsolateData = await request.json();\n  let submissions = await readTsv();\n  const index = submissions.findIndex(s => s.id === updatedRow.id);\n\n  if (index === -1) {\n    return NextResponse.json({ error: 'Submission not found' }, { status: 404 });\n  }\n  \n  submissions[index] = { ...submissions[index], ...updatedRow };\n  await writeData(submissions);\n\n  return NextResponse.json({ success: true, updatedRow });\n}\n\nexport async function DELETE(request: NextRequest) {\n  const { id } = await request.json();\n  let submissions = await readTsv();\n  const filteredSubmissions = submissions.filter(s => s.id !== id);\n  \n  if (submissions.length === filteredSubmissions.length) {\n      return NextResponse.json({ error: 'Submission not found' }, { status: 404 });\n  }\n\n  await writeData(filteredSubmissions);\n\n  return NextResponse.json({ success: true });\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAOA,MAAM,UAAU,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AACzC,MAAM,cAAc,4GAAI,CAAC,IAAI,CAAC,SAAS;AACvC,MAAM,eAAe,4GAAI,CAAC,IAAI,CAAC,SAAS;AAExC,yDAAyD;AACzD,eAAe;IACb,IAAI;QACF,MAAM,yGAAE,CAAC,MAAM,CAAC;QAChB,MAAM,cAAc,MAAM,yGAAE,CAAC,QAAQ,CAAC,aAAa;QACnD,MAAM,UAAU,IAAA,sKAAK,EAAC,aAAa;YACjC,WAAW;YACX,SAAS;YACT,kBAAkB;QACpB;QACA,OAAO,QAAQ,GAAG,CAAC,CAAC,KAAU,QAAkB,CAAC;gBAAE,IAAI,IAAI,SAAS,IAAI,CAAC,IAAI,EAAE,OAAO;gBAAE,GAAG,GAAG;YAAC,CAAC;IAClG,EAAE,OAAM;QACN,OAAO,EAAE;IACX;AACF;AAEA,6DAA6D;AAC7D,eAAe,UAAU,IAAmB;IACxC,eAAe;IACf,IAAI,KAAK,MAAM,GAAG,GAAG;QACjB,MAAM,cAAc,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,MAAM,GAAK;QAClD,MAAM,YAAY,IAAA,8JAAS,EAAC,aAAa;YAAE,QAAQ;YAAM,WAAW;QAAK;QACzE,MAAM,yGAAE,CAAC,SAAS,CAAC,aAAa;IACpC,OAAO;QACF,MAAM,yGAAE,CAAC,MAAM,CAAC,aAAa,KAAK,CAAC,KAAO;IAC/C;IAEA,gBAAgB;IAChB,MAAM,kBAAkB,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,MAAM,GAAK,CAAC;YAAC;YAAI,GAAG,IAAI;QAAA,CAAC;IACpE,MAAM,yGAAE,CAAC,SAAS,CAAC,cAAc,KAAK,SAAS,CAAC,iBAAiB,MAAM;AAC3E;AAIO,eAAe;IACpB,MAAM,cAAc,MAAM;IAC1B,OAAO,gJAAY,CAAC,IAAI,CAAC;QAAE;IAAY;AACzC;AAEO,eAAe,IAAI,OAAoB;IAC5C,MAAM,aAA0B,MAAM,QAAQ,IAAI;IAClD,IAAI,cAAc,MAAM;IACxB,MAAM,QAAQ,YAAY,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,WAAW,EAAE;IAE/D,IAAI,UAAU,CAAC,GAAG;QAChB,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;IAEA,WAAW,CAAC,MAAM,GAAG;QAAE,GAAG,WAAW,CAAC,MAAM;QAAE,GAAG,UAAU;IAAC;IAC5D,MAAM,UAAU;IAEhB,OAAO,gJAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAAM;IAAW;AACvD;AAEO,eAAe,OAAO,OAAoB;IAC/C,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,QAAQ,IAAI;IACjC,IAAI,cAAc,MAAM;IACxB,MAAM,sBAAsB,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;IAE7D,IAAI,YAAY,MAAM,KAAK,oBAAoB,MAAM,EAAE;QACnD,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC9E;IAEA,MAAM,UAAU;IAEhB,OAAO,gJAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAK;AAC3C","debugId":null}}]
}