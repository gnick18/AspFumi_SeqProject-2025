{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///Users/gnickles/Desktop/AspFumi_Site/src/app/api/labs/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { promises as fs } from 'fs';\nimport path from 'path';\n\n// This is a public-facing API route. Its only job is to read the\n// labs.json file and provide it to the frontend components like the map.\nexport async function GET() {\n  try {\n    const dataDir = path.join(process.cwd(), 'data');\n    const jsonFilePath = path.join(dataDir, 'labs.json');\n\n    let labs = [];\n\n    try {\n      const jsonData = await fs.readFile(jsonFilePath, 'utf-8');\n      labs = JSON.parse(jsonData);\n    } catch (error) {\n      // If the file doesn't exist, it's not an error for the public map.\n      // It just means no labs have been submitted yet. We'll return an empty array.\n      console.log('labs.json not found, returning empty array to the map.');\n    }\n\n    return NextResponse.json({\n      success: true,\n      labs: labs,\n    });\n\n  } catch (error) {\n    console.error('Error fetching labs for map:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAIO,eAAe;IACpB,IAAI;QACF,MAAM,UAAU,4GAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;QACzC,MAAM,eAAe,4GAAI,CAAC,IAAI,CAAC,SAAS;QAExC,IAAI,OAAO,EAAE;QAEb,IAAI;YACF,MAAM,WAAW,MAAM,yGAAE,CAAC,QAAQ,CAAC,cAAc;YACjD,OAAO,KAAK,KAAK,CAAC;QACpB,EAAE,OAAO,OAAO;YACd,mEAAmE;YACnE,8EAA8E;YAC9E,QAAQ,GAAG,CAAC;QACd;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;QACR;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}