{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/gnickles/Desktop/AspFumi_Site/src/components/EditableTable.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\n\n// --- TYPE DEFINITIONS ---\ninterface Column {\n  key: string;\n  header: string;\n  type?: 'text' | 'textarea'; // Allows for different input types\n}\n\ninterface EditableTableProps {\n  columns: Column[];\n  data: any[];\n  onSave: (updatedRow: any) => Promise<boolean>;\n  onDelete: (id: string) => Promise<void>;\n}\n\n// --- ROW COMPONENT ---\n// Manages the state for a single row (viewing vs. editing)\nconst EditableRow = ({ row, columns, onSave, onDelete }: { row: any, columns: Column[], onSave: (updatedRow: any) => Promise<boolean>, onDelete: (id: string) => Promise<void> }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [rowData, setRowData] = useState(row);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const handleSave = async () => {\n    setIsSaving(true);\n    const success = await onSave(rowData);\n    if (success) {\n      setIsEditing(false);\n    }\n    setIsSaving(false);\n  };\n\n  const handleChange = (key: string, value: string) => {\n    setRowData({ ...rowData, [key]: value });\n  };\n\n  return (\n    <tr className=\"border-b hover:bg-gray-50\">\n      {columns.map(col => (\n        <td key={col.key} className=\"p-2 text-sm\">\n          {isEditing ? (\n            col.type === 'textarea' ? (\n              <textarea\n                value={rowData[col.key]}\n                onChange={(e) => handleChange(col.key, e.target.value)}\n                className=\"w-full p-1 border rounded text-xs\"\n                rows={4}\n              />\n            ) : (\n              <input\n                type=\"text\"\n                value={rowData[col.key]}\n                onChange={(e) => handleChange(col.key, e.target.value)}\n                className=\"w-full p-1 border rounded\"\n              />\n            )\n          ) : (\n            <span className=\"line-clamp-2\">{rowData[col.key]}</span>\n          )}\n        </td>\n      ))}\n      <td className=\"p-2 text-right\">\n        {isEditing ? (\n          <>\n            <button onClick={handleSave} disabled={isSaving} className=\"text-sm text-green-600 hover:text-green-800 font-semibold disabled:opacity-50\">\n              {isSaving ? 'Saving...' : 'Save'}\n            </button>\n            <button onClick={() => setIsEditing(false)} className=\"ml-2 text-sm text-gray-500 hover:text-gray-700\">\n              Cancel\n            </button>\n          </>\n        ) : (\n          <>\n            <button onClick={() => setIsEditing(true)} className=\"text-sm text-blue-600 hover:text-blue-800 font-semibold\">\n              Edit\n            </button>\n             <button onClick={() => onDelete(row.id)} className=\"ml-2 text-sm text-red-600 hover:text-red-800\">\n              Delete\n            </button>\n          </>\n        )}\n      </td>\n    </tr>\n  );\n};\n\n\n// --- MAIN TABLE COMPONENT ---\nconst EditableTable = ({ columns, data, onSave, onDelete }: EditableTableProps) => {\n  if (!data || data.length === 0) {\n    return <p className=\"text-gray-500\">No data available.</p>;\n  }\n\n  return (\n    <div className=\"overflow-x-auto bg-white rounded-lg shadow\">\n      <table className=\"w-full\">\n        <thead>\n          <tr className=\"bg-gray-100 text-left\">\n            {columns.map(col => (\n              <th key={col.key} className=\"p-2 font-semibold text-sm\">{col.header}</th>\n            ))}\n            <th className=\"p-2\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row) => (\n            <EditableRow key={row.id} row={row} columns={columns} onSave={onSave} onDelete={onDelete} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default EditableTable;\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAkBA,wBAAwB;AACxB,2DAA2D;AAC3D,MAAM,cAAc,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAA2H;IAC9K,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IAEzC,MAAM,aAAa;QACjB,YAAY;QACZ,MAAM,UAAU,MAAM,OAAO;QAC7B,IAAI,SAAS;YACX,aAAa;QACf;QACA,YAAY;IACd;IAEA,MAAM,eAAe,CAAC,KAAa;QACjC,WAAW;YAAE,GAAG,OAAO;YAAE,CAAC,IAAI,EAAE;QAAM;IACxC;IAEA,qBACE,8OAAC;QAAG,WAAU;;YACX,QAAQ,GAAG,CAAC,CAAA,oBACX,8OAAC;oBAAiB,WAAU;8BACzB,YACC,IAAI,IAAI,KAAK,2BACX,8OAAC;wBACC,OAAO,OAAO,CAAC,IAAI,GAAG,CAAC;wBACvB,UAAU,CAAC,IAAM,aAAa,IAAI,GAAG,EAAE,EAAE,MAAM,CAAC,KAAK;wBACrD,WAAU;wBACV,MAAM;;;;;iFAGR,8OAAC;wBACC,MAAK;wBACL,OAAO,OAAO,CAAC,IAAI,GAAG,CAAC;wBACvB,UAAU,CAAC,IAAM,aAAa,IAAI,GAAG,EAAE,EAAE,MAAM,CAAC,KAAK;wBACrD,WAAU;;;;;iFAId,8OAAC;wBAAK,WAAU;kCAAgB,OAAO,CAAC,IAAI,GAAG,CAAC;;;;;;mBAlB3C,IAAI,GAAG;;;;;0BAsBlB,8OAAC;gBAAG,WAAU;0BACX,0BACC;;sCACE,8OAAC;4BAAO,SAAS;4BAAY,UAAU;4BAAU,WAAU;sCACxD,WAAW,cAAc;;;;;;sCAE5B,8OAAC;4BAAO,SAAS,IAAM,aAAa;4BAAQ,WAAU;sCAAiD;;;;;;;iDAKzG;;sCACE,8OAAC;4BAAO,SAAS,IAAM,aAAa;4BAAO,WAAU;sCAA0D;;;;;;sCAG9G,8OAAC;4BAAO,SAAS,IAAM,SAAS,IAAI,EAAE;4BAAG,WAAU;sCAA+C;;;;;;;;;;;;;;;;;;;AAQ/G;AAGA,+BAA+B;AAC/B,MAAM,gBAAgB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAsB;IAC5E,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,qBAAO,8OAAC;YAAE,WAAU;sBAAgB;;;;;;IACtC;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAM,WAAU;;8BACf,8OAAC;8BACC,cAAA,8OAAC;wBAAG,WAAU;;4BACX,QAAQ,GAAG,CAAC,CAAA,oBACX,8OAAC;oCAAiB,WAAU;8CAA6B,IAAI,MAAM;mCAA1D,IAAI,GAAG;;;;;0CAElB,8OAAC;gCAAG,WAAU;;;;;;;;;;;;;;;;;8BAGlB,8OAAC;8BACE,KAAK,GAAG,CAAC,CAAC,oBACT,8OAAC;4BAAyB,KAAK;4BAAK,SAAS;4BAAS,QAAQ;4BAAQ,UAAU;2BAA9D,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;AAMpC;uCAEe","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///Users/gnickles/Desktop/AspFumi_Site/src/app/admin/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport EditableTable from '@/components/EditableTable'; // Corrected the import path\nimport type { Column } from '@/components/EditableTable';\n\n// --- Interfaces for our data ---\nexport interface LabMetadata {\n  id: string; // A unique ID is crucial for editing/deleting\n  timestamp: string;\n  lab_name: string;\n  institution: string;\n  city: string;\n  state: string;\n  country: string;\n  contact_name: string;\n  contact_email: string;\n  research_use: string;\n  comments: string;\n  latitude: string;\n  longitude: string;\n  match_level: string;\n}\n\nexport interface IsolateData {\n  id: string; // A unique ID\n  timestamp: string;\n  submitting_lab: string;\n  strain_name: string;\n  strain_origin: string;\n  strain_center_name?: string;\n  strain_center_location?: string;\n  strain_center_date?: string;\n  sharing_lab_name?: string;\n  sharing_lab_institute?: string;\n  sharing_lab_location?: string;\n  genotype_details_json: string;\n  other_genes_json: string;\n  other_mutations: string;\n}\n\nexport default function AdminPage() {\n  const [labSubmissions, setLabSubmissions] = useState<LabMetadata[]>([]);\n  const [isolateSubmissions, setIsolateSubmissions] = useState<IsolateData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState<'metadata' | 'isolates'>('metadata');\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadAllData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const [labRes, isolateRes] = await Promise.all([\n          fetch('/api/admin/metadata'),\n          fetch('/api/admin/isolates')\n        ]);\n\n        if (!labRes.ok || !isolateRes.ok) {\n          throw new Error('Failed to fetch one or more data sources.');\n        }\n\n        const labData = await labRes.json();\n        const isolateData = await isolateRes.json();\n\n        setLabSubmissions(labData.submissions || []);\n        setIsolateSubmissions(isolateData.submissions || []);\n\n      } catch (err) {\n        console.error(err);\n        setError('Failed to load submission data. Please check the server logs.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadAllData();\n  }, []);\n\n  const handleSave = async (updatedRow: LabMetadata | IsolateData, endpoint: 'metadata' | 'isolates') => {\n    try {\n      const response = await fetch(`/api/admin/${endpoint}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updatedRow),\n      });\n      if (!response.ok) throw new Error('Failed to save data.');\n      \n      if (endpoint === 'metadata') {\n        setLabSubmissions(labs => labs.map(lab => lab.id === updatedRow.id ? (updatedRow as LabMetadata) : lab));\n      } else {\n        setIsolateSubmissions(isos => isos.map(iso => iso.id === updatedRow.id ? (updatedRow as IsolateData) : iso));\n      }\n      return true;\n    } catch (saveError) {\n      console.error('Save failed:', saveError);\n      alert('Error saving data. Please check the console.');\n      return false;\n    }\n  };\n  \n  const handleDelete = async (id: string, endpoint: 'metadata' | 'isolates') => {\n    if (!confirm('Are you sure you want to delete this row? This action cannot be undone.')) return;\n    try {\n      const response = await fetch(`/api/admin/${endpoint}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ id }),\n      });\n       if (!response.ok) throw new Error('Failed to delete data.');\n       \n       if (endpoint === 'metadata') {\n         setLabSubmissions(labs => labs.filter(lab => lab.id !== id));\n       } else {\n         setIsolateSubmissions(isolates => isolates.filter(iso => iso.id !== id));\n       }\n    } catch (deleteError) {\n       console.error('Delete failed:', deleteError);\n       alert('Error deleting data. Please check the console.');\n    }\n  };\n\n  const labColumns: Column[] = [\n    { key: 'lab_name', header: 'Lab Name' }, { key: 'institution', header: 'Institution' },\n    { key: 'city', header: 'City' }, { key: 'country', header: 'Country' },\n    { key: 'contact_email', header: 'Contact' }, { key: 'latitude', header: 'Lat' },\n    { key: 'longitude', header: 'Lng' }, { key: 'match_level', header: 'Match' },\n  ];\n\n  const isolateColumns: Column[] = [\n    { key: 'submitting_lab', header: 'Submitting Lab' }, { key: 'strain_name', header: 'Strain Name' },\n    { key: 'strain_origin', header: 'Origin' },\n    { key: 'genotype_details_json', header: 'Genotype (JSON)', type: 'textarea' },\n    { key: 'other_genes_json', header: 'Other Genes (JSON)', type: 'textarea' },\n  ];\n\n  if (loading) return <div>Loading Admin Dashboard...</div>;\n  if (error) return <div className=\"text-red-500\">{error}</div>;\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-4 md:p-6\">\n      <h1 className=\"text-2xl md:text-3xl font-bold mb-6\">Admin Dashboard</h1>\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n        <div className=\"p-4 bg-blue-100 rounded-lg shadow\"><p className=\"text-3xl font-bold text-blue-800\">{labSubmissions.length}</p><p className=\"text-sm text-blue-600\">Total Labs Submitted</p></div>\n        <div className=\"p-4 bg-green-100 rounded-lg shadow\"><p className=\"text-3xl font-bold text-green-800\">{isolateSubmissions.length}</p><p className=\"text-sm text-green-600\">Total Isolates Submitted</p></div>\n        <div className=\"p-4 bg-purple-100 rounded-lg shadow\"><p className=\"text-3xl font-bold text-purple-800\">{labSubmissions.length > 0 ? (isolateSubmissions.length / labSubmissions.length).toFixed(1) : 0}</p><p className=\"text-sm text-purple-600\">Avg. Isolates per Lab</p></div>\n      </div>\n      <div className=\"flex border-b mb-4\">\n        <button onClick={() => setActiveTab('metadata')} className={`py-2 px-4 ${activeTab === 'metadata' ? 'border-b-2 border-blue-500 font-semibold' : ''}`}>Lab Metadata ({labSubmissions.length})</button>\n        <button onClick={() => setActiveTab('isolates')} className={`py-2 px-4 ${activeTab === 'isolates' ? 'border-b-2 border-blue-500 font-semibold' : ''}`}>Isolate Submissions ({isolateSubmissions.length})</button>\n      </div>\n      {activeTab === 'metadata' ? (\n        <EditableTable columns={labColumns} data={labSubmissions} onSave={(row) => handleSave(row, 'metadata')} onDelete={(id) => handleDelete(id, 'metadata')} />\n      ) : (\n        <EditableTable columns={isolateColumns} data={isolateSubmissions} onSave={(row) => handleSave(row, 'isolates')} onDelete={(id) => handleDelete(id, 'isolates')} />\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}