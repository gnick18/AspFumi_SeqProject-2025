{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/gnickles/Desktop/AspFumi_Site/src/components/EditableTable.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\n\n// --- TYPE DEFINITIONS ---\nexport interface Column {\n  key: string;\n  header: string;\n  type?: 'text' | 'textarea';\n  // FIX 1: Added an optional 'selectOptions' property.\n  // If this exists, the cell will render as a dropdown.\n  selectOptions?: readonly string[]; \n}\n\ninterface EditableTableProps<T extends { id: string }> {\n  columns: Column[];\n  data: T[];\n  onSave: (updatedRow: T) => Promise<boolean>;\n  onDelete: (id: string) => Promise<void>;\n}\n\nconst EditableRow = <T extends { id: string }>({ row, columns, onSave, onDelete }: { row: T, columns: Column[], onSave: (updatedRow: T) => Promise<boolean>, onDelete: (id: string) => Promise<void> }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [rowData, setRowData] = useState(row);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const handleSave = async () => {\n    setIsSaving(true);\n    const success = await onSave(rowData);\n    if (success) {\n      setIsEditing(false);\n    }\n    setIsSaving(false);\n  };\n\n  const handleChange = (key: string, value: string) => {\n    setRowData({ ...rowData, [key]: value });\n  };\n\n  return (\n    <tr className=\"border-b hover:bg-gray-50\">\n      {columns.map(col => (\n        <td key={col.key} className=\"p-2 text-sm align-top\">\n          {isEditing ? (\n            // FIX 2: Added new logic to render a <select> dropdown if 'selectOptions' are provided.\n            col.selectOptions ? (\n              <select\n                value={rowData[col.key as keyof T] as string}\n                onChange={(e) => handleChange(col.key, e.target.value)}\n                className=\"w-full p-1 border rounded text-xs\"\n              >\n                {col.selectOptions.map(option => (\n                  <option key={option} value={option}>{option}</option>\n                ))}\n              </select>\n            ) : col.type === 'textarea' ? (\n              <textarea\n                value={rowData[col.key as keyof T] as string}\n                onChange={(e) => handleChange(col.key, e.target.value)}\n                className=\"w-full p-1 border rounded text-xs\"\n                rows={4}\n              />\n            ) : (\n              <input\n                type=\"text\"\n                value={rowData[col.key as keyof T] as string}\n                onChange={(e) => handleChange(col.key, e.target.value)}\n                className=\"w-full p-1 border rounded\"\n              />\n            )\n          ) : (\n            <span className=\"line-clamp-2\">{rowData[col.key as keyof T] as string}</span>\n          )}\n        </td>\n      ))}\n      <td className=\"p-2 text-right align-top\">\n        {isEditing ? (\n          <>\n            <button onClick={handleSave} disabled={isSaving} className=\"text-sm text-green-600 hover:text-green-800 font-semibold disabled:opacity-50\">\n              {isSaving ? 'Saving...' : 'Save'}\n            </button>\n            <button onClick={() => setIsEditing(false)} className=\"ml-2 text-sm text-gray-500 hover:text-gray-700\">\n              Cancel\n            </button>\n          </>\n        ) : (\n          <>\n            <button onClick={() => setIsEditing(true)} className=\"text-sm text-blue-600 hover:text-blue-800 font-semibold\">\n              Edit\n            </button>\n             <button onClick={() => onDelete(row.id)} className=\"ml-2 text-sm text-red-600 hover:text-red-800\">\n              Delete\n            </button>\n          </>\n        )}\n      </td>\n    </tr>\n  );\n};\n\nconst EditableTable = <T extends { id: string }>({ columns, data, onSave, onDelete }: EditableTableProps<T>) => {\n  if (!data || data.length === 0) {\n    return <p className=\"text-gray-500\">No data available for this category.</p>;\n  }\n\n  return (\n    <div className=\"overflow-x-auto bg-white rounded-lg shadow\">\n      <table className=\"w-full\">\n        <thead>\n          <tr className=\"bg-gray-100 text-left\">\n            {columns.map(col => (\n              <th key={col.key} className=\"p-2 font-semibold text-sm\">{col.header}</th>\n            ))}\n            <th className=\"p-2\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row) => (\n            <EditableRow key={row.id} row={row} columns={columns} onSave={onSave} onDelete={onDelete} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default EditableTable;\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAqBA,MAAM,cAAc,CAA2B,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAuH;IACpM,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IAEzC,MAAM,aAAa;QACjB,YAAY;QACZ,MAAM,UAAU,MAAM,OAAO;QAC7B,IAAI,SAAS;YACX,aAAa;QACf;QACA,YAAY;IACd;IAEA,MAAM,eAAe,CAAC,KAAa;QACjC,WAAW;YAAE,GAAG,OAAO;YAAE,CAAC,IAAI,EAAE;QAAM;IACxC;IAEA,qBACE,8OAAC;QAAG,WAAU;;YACX,QAAQ,GAAG,CAAC,CAAA,oBACX,8OAAC;oBAAiB,WAAU;8BACzB,YACC,wFAAwF;oBACxF,IAAI,aAAa,iBACf,8OAAC;wBACC,OAAO,OAAO,CAAC,IAAI,GAAG,CAAY;wBAClC,UAAU,CAAC,IAAM,aAAa,IAAI,GAAG,EAAE,EAAE,MAAM,CAAC,KAAK;wBACrD,WAAU;kCAET,IAAI,aAAa,CAAC,GAAG,CAAC,CAAA,uBACrB,8OAAC;gCAAoB,OAAO;0CAAS;+BAAxB;;;;;;;;;mEAGf,IAAI,IAAI,KAAK,2BACf,8OAAC;wBACC,OAAO,OAAO,CAAC,IAAI,GAAG,CAAY;wBAClC,UAAU,CAAC,IAAM,aAAa,IAAI,GAAG,EAAE,EAAE,MAAM,CAAC,KAAK;wBACrD,WAAU;wBACV,MAAM;;;;;iFAGR,8OAAC;wBACC,MAAK;wBACL,OAAO,OAAO,CAAC,IAAI,GAAG,CAAY;wBAClC,UAAU,CAAC,IAAM,aAAa,IAAI,GAAG,EAAE,EAAE,MAAM,CAAC,KAAK;wBACrD,WAAU;;;;;iFAId,8OAAC;wBAAK,WAAU;kCAAgB,OAAO,CAAC,IAAI,GAAG,CAAY;;;;;;mBA7BtD,IAAI,GAAG;;;;;0BAiClB,8OAAC;gBAAG,WAAU;0BACX,0BACC;;sCACE,8OAAC;4BAAO,SAAS;4BAAY,UAAU;4BAAU,WAAU;sCACxD,WAAW,cAAc;;;;;;sCAE5B,8OAAC;4BAAO,SAAS,IAAM,aAAa;4BAAQ,WAAU;sCAAiD;;;;;;;iDAKzG;;sCACE,8OAAC;4BAAO,SAAS,IAAM,aAAa;4BAAO,WAAU;sCAA0D;;;;;;sCAG9G,8OAAC;4BAAO,SAAS,IAAM,SAAS,IAAI,EAAE;4BAAG,WAAU;sCAA+C;;;;;;;;;;;;;;;;;;;AAQ/G;AAEA,MAAM,gBAAgB,CAA2B,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAyB;IACzG,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,qBAAO,8OAAC;YAAE,WAAU;sBAAgB;;;;;;IACtC;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAM,WAAU;;8BACf,8OAAC;8BACC,cAAA,8OAAC;wBAAG,WAAU;;4BACX,QAAQ,GAAG,CAAC,CAAA,oBACX,8OAAC;oCAAiB,WAAU;8CAA6B,IAAI,MAAM;mCAA1D,IAAI,GAAG;;;;;0CAElB,8OAAC;gCAAG,WAAU;;;;;;;;;;;;;;;;;8BAGlB,8OAAC;8BACE,KAAK,GAAG,CAAC,CAAC,oBACT,8OAAC;4BAAyB,KAAK;4BAAK,SAAS;4BAAS,QAAQ;4BAAQ,UAAU;2BAA9D,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;AAMpC;uCAEe","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///Users/gnickles/Desktop/AspFumi_Site/src/app/admin/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, FormEvent } from 'react';\n// FIX: Changed from path alias to a direct relative path\nimport EditableTable from '@/components/EditableTable';\nimport type { Column } from '@/components/EditableTable';\n\n// --- Interfaces for our data ---\nexport interface LabMetadata {\n  id: string; timestamp: string; lab_name: string; institution: string; city: string;\n  state: string; country: string; contact_name: string; contact_email: string;\n  research_use: string; comments: string; latitude: string; longitude: string; match_level: string;\n}\n\nexport interface IsolateData {\n  id: string; timestamp: string; submitting_lab: string; strain_name: string; strain_origin: string;\n  strain_center_name?: string; strain_center_location?: string; strain_center_date?: string;\n  sharing_lab_name?: string; sharing_lab_institute?: string; sharing_lab_location?: string;\n  genotype_details_json: string; other_genes_json: string; other_mutations: string;\n}\n\nexport interface ContactLogEntry {\n  id: string;\n  labName: string;\n  institution: string;\n  email: string;\n  status: \"Not contacted\" | \"Contacted (x1)\" | \"Contacted (x2)\" | \"Responded (yes)\" | \"Responded (no)\";\n  contactedBy: string;\n  comments: string;\n}\n\nconst CORRECT_PASSWORD = 'toxins';\n\nexport default function AdminPage() {\n  const [isClient, setIsClient] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [passwordInput, setPasswordInput] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [labSubmissions, setLabSubmissions] = useState<LabMetadata[]>([]);\n  const [isolateSubmissions, setIsolateSubmissions] = useState<IsolateData[]>([]);\n  const [contactLog, setContactLog] = useState<ContactLogEntry[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState<'metadata' | 'isolates'>('metadata');\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  useEffect(() => {\n    if (!isAuthenticated) return;\n\n    const loadAllData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const [labRes, isolateRes, contactRes] = await Promise.all([\n          fetch('/api/admin/metadata'),\n          fetch('/api/admin/isolates'),\n          fetch('/api/admin/contact-log')\n        ]);\n\n        if (!labRes.ok || !isolateRes.ok || !contactRes.ok) {\n          throw new Error('Failed to fetch one or more data sources.');\n        }\n\n        const labData = await labRes.json();\n        const isolateData = await isolateRes.json();\n        const contactData = await contactRes.json();\n\n        setLabSubmissions(labData.submissions || []);\n        setIsolateSubmissions(isolateData.submissions || []);\n        setContactLog(contactData.contacts || []);\n\n      } catch (err: unknown) {\n        console.error(err);\n        if (err instanceof Error) {\n          setError(err.message);\n        } else {\n          setError('An unknown error occurred while loading data.');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadAllData();\n  }, [isAuthenticated]);\n\n  const handlePasswordSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    if (passwordInput === CORRECT_PASSWORD) {\n      setIsAuthenticated(true);\n      setPasswordError('');\n    } else {\n      setPasswordError('Incorrect password.');\n    }\n  };\n\n  const handleSave = async (updatedRow: LabMetadata | IsolateData, endpoint: 'metadata' | 'isolates') => {\n    try {\n        const response = await fetch(`/api/admin/${endpoint}`, { method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(updatedRow), });\n        if (!response.ok) throw new Error('Failed to save data.');\n        if (endpoint === 'metadata') {\n            setLabSubmissions(labs => labs.map(lab => lab.id === updatedRow.id ? (updatedRow as LabMetadata) : lab));\n        } else {\n            setIsolateSubmissions(isos => isos.map(iso => iso.id === updatedRow.id ? (updatedRow as IsolateData) : iso));\n        }\n        return true;\n    } catch (saveError) {\n        console.error('Save failed:', saveError);\n        alert('Error saving data. Please check the console.');\n        return false;\n    }\n  };\n\n  const handleDelete = async (id: string, endpoint: 'metadata' | 'isolates') => {\n    if (!confirm('Are you sure you want to delete this row? This action cannot be undone.')) return;\n    try {\n        const response = await fetch(`/api/admin/${endpoint}`, { method: 'DELETE', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ id }), });\n        if (!response.ok) throw new Error('Failed to delete data.');\n        if (endpoint === 'metadata') { setLabSubmissions(labs => labs.filter(lab => lab.id !== id));\n        } else { setIsolateSubmissions(isolates => isolates.filter(iso => iso.id !== id)); }\n    } catch (deleteError) {\n        console.error('Delete failed:', deleteError);\n        alert('Error deleting data. Please check the console.');\n    }\n  };\n\n  const handleSaveContact = async (updatedRow: ContactLogEntry) => {\n    try {\n      const response = await fetch('/api/admin/contact-log', { method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(updatedRow) });\n      if (!response.ok) throw new Error('Failed to save contact.');\n      setContactLog(contacts => contacts.map(c => c.id === updatedRow.id ? updatedRow : c));\n      return true;\n    } catch (e) { console.error(e); alert('Failed to save contact.'); return false; }\n  };\n\n  const handleDeleteContact = async (id: string) => {\n    if (!confirm('Are you sure you want to delete this contact log entry?')) return;\n    try {\n      await fetch('/api/admin/contact-log', { method: 'DELETE', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ id }) });\n      setContactLog(contacts => contacts.filter(c => c.id !== id));\n    } catch (e) { console.error(e); alert('Failed to delete contact.'); }\n  };\n  \n  const handleAddNewContact = async () => {\n      try {\n        const response = await fetch('/api/admin/contact-log', { method: 'POST' });\n        const { newEntry } = await response.json();\n        if (newEntry) {\n            setContactLog(currentContacts => [...currentContacts, newEntry]);\n        }\n      } catch(e) { console.error(e); alert('Failed to add new row.'); }\n  };\n\n  const labColumns: Column[] = [\n    { key: 'lab_name', header: 'Lab Name' }, { key: 'institution', header: 'Institution' },\n    { key: 'city', header: 'City' }, \n    { key: 'state', header: 'State/Region' }, \n    { key: 'country', header: 'Country' },\n    { key: 'contact_email', header: 'Contact' }, { key: 'latitude', header: 'Lat' },\n    { key: 'longitude', header: 'Lng' }, { key: 'match_level', header: 'Match' },\n  ];\n  const isolateColumns: Column[] = [\n    { key: 'submitting_lab', header: 'Submitting Lab' }, \n    { key: 'strain_name', header: 'Strain Name' }, \n    { key: 'strain_origin', header: 'Origin' },\n    { key: 'strain_center_name', header: 'Strain Center' },\n    { key: 'strain_center_location', header: 'Center Location' },\n    { key: 'sharing_lab_name', header: 'Sharing Lab' },\n    { key: 'genotype_details_json', header: 'Genotype (JSON)', type: 'textarea' }, \n    { key: 'other_genes_json', header: 'Other Genes (JSON)', type: 'textarea' },\n    { key: 'other_mutations', header: 'Other Mutations', type: 'textarea' },\n  ];\n  const contactColumns: Column[] = [\n    { key: 'labName', header: 'Lab Name' }, { key: 'institution', header: 'Institution' }, { key: 'email', header: 'Email' },\n    { key: 'status', header: 'Contacted?', selectOptions: [\"Not contacted\", \"Contacted (x1)\", \"Contacted (x2)\", \"Responded (yes)\", \"Responded (no)\"] },\n    { key: 'contactedBy', header: 'Contacted By' },\n    { key: 'comments', header: \"Comments\", type: 'textarea'}\n  ];\n  \n  if (!isClient) {\n    return null;\n  }\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n        <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-md\">\n          <h2 className=\"text-2xl font-bold text-center text-gray-800\">Admin Access</h2>\n          <form onSubmit={handlePasswordSubmit} className=\"space-y-6\">\n            <div>\n              <label htmlFor=\"password\" className=\"text-sm font-bold text-gray-600 block\">Password</label>\n              <input\n                id=\"password\"\n                type=\"password\"\n                value={passwordInput}\n                onChange={(e) => setPasswordInput(e.target.value)}\n                className=\"w-full p-2 mt-1 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500\"\n                required\n              />\n            </div>\n            {passwordError && (\n              <p className=\"text-sm text-red-600 text-center\">{passwordError}</p>\n            )}\n            <div>\n              <button type=\"submit\" className=\"w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-md\">\n                Enter\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  if (loading) return <div>Loading Admin Dashboard...</div>;\n  if (error) return <div className=\"text-red-500\">{error}</div>;\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-4 md:p-6\">\n      <h1 className=\"text-2xl md:text-3xl font-bold mb-6\">Admin Dashboard</h1>\n      <div className=\"mb-8 p-4 border rounded-lg bg-white shadow-md\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h2 className=\"text-xl font-semibold\">Lab Outreach Tracker</h2>\n            <button onClick={handleAddNewContact} className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 text-sm font-medium\">\n                + Add New Row\n            </button>\n          </div>\n          <EditableTable columns={contactColumns} data={contactLog} onSave={handleSaveContact} onDelete={handleDeleteContact} />\n      </div>\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n        <div className=\"p-4 bg-blue-100 rounded-lg shadow\"><p className=\"text-3xl font-bold text-blue-800\">{labSubmissions.length}</p><p className=\"text-sm text-blue-600\">Total Labs Submitted</p></div>\n        <div className=\"p-4 bg-green-100 rounded-lg shadow\"><p className=\"text-3xl font-bold text-green-800\">{isolateSubmissions.length}</p><p className=\"text-sm text-green-600\">Total Isolates Submitted</p></div>\n        <div className=\"p-4 bg-purple-100 rounded-lg shadow\"><p className=\"text-3xl font-bold text-purple-800\">{labSubmissions.length > 0 ? (isolateSubmissions.length / labSubmissions.length).toFixed(1) : 0}</p><p className=\"text-sm text-purple-600\">Avg. Isolates per Lab</p></div>\n      </div>\n      <div className=\"flex border-b mb-4\">\n        <button onClick={() => setActiveTab('metadata')} className={`py-2 px-4 ${activeTab === 'metadata' ? 'border-b-2 border-blue-500 font-semibold' : ''}`}>Lab Metadata ({labSubmissions.length})</button>\n        <button onClick={() => setActiveTab('isolates')} className={`py-2 px-4 ${activeTab === 'isolates' ? 'border-b-2 border-blue-500 font-semibold' : ''}`}>Isolate Submissions ({isolateSubmissions.length})</button>\n      </div>\n      {activeTab === 'metadata' ? (\n        <EditableTable columns={labColumns} data={labSubmissions} onSave={(row) => handleSave(row, 'metadata')} onDelete={(id) => handleDelete(id, 'metadata')} />\n      ) : (\n        <EditableTable columns={isolateColumns} data={isolateSubmissions} onSave={(row) => handleSave(row, 'isolates')} onDelete={(id) => handleDelete(id, 'isolates')} />\n      )}\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}