{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/gnickles/Desktop/AspFumi_Site/src/components/EditableTable.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\n\n// --- TYPE DEFINITIONS ---\ninterface Column {\n  key: string;\n  header: string;\n  type?: 'text' | 'textarea'; // Allows for different input types\n}\n\ninterface EditableTableProps {\n  columns: Column[];\n  data: any[];\n  onSave: (updatedRow: any) => Promise<boolean>;\n  onDelete: (id: string) => Promise<void>;\n}\n\n// --- ROW COMPONENT ---\n// Manages the state for a single row (viewing vs. editing)\nconst EditableRow = ({ row, columns, onSave, onDelete }: { row: any, columns: Column[], onSave: (updatedRow: any) => Promise<boolean>, onDelete: (id: string) => Promise<void> }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [rowData, setRowData] = useState(row);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const handleSave = async () => {\n    setIsSaving(true);\n    const success = await onSave(rowData);\n    if (success) {\n      setIsEditing(false);\n    }\n    setIsSaving(false);\n  };\n\n  const handleChange = (key: string, value: string) => {\n    setRowData({ ...rowData, [key]: value });\n  };\n\n  return (\n    <tr className=\"border-b hover:bg-gray-50\">\n      {columns.map(col => (\n        <td key={col.key} className=\"p-2 text-sm\">\n          {isEditing ? (\n            col.type === 'textarea' ? (\n              <textarea\n                value={rowData[col.key]}\n                onChange={(e) => handleChange(col.key, e.target.value)}\n                className=\"w-full p-1 border rounded text-xs\"\n                rows={4}\n              />\n            ) : (\n              <input\n                type=\"text\"\n                value={rowData[col.key]}\n                onChange={(e) => handleChange(col.key, e.target.value)}\n                className=\"w-full p-1 border rounded\"\n              />\n            )\n          ) : (\n            <span className=\"line-clamp-2\">{rowData[col.key]}</span>\n          )}\n        </td>\n      ))}\n      <td className=\"p-2 text-right\">\n        {isEditing ? (\n          <>\n            <button onClick={handleSave} disabled={isSaving} className=\"text-sm text-green-600 hover:text-green-800 font-semibold disabled:opacity-50\">\n              {isSaving ? 'Saving...' : 'Save'}\n            </button>\n            <button onClick={() => setIsEditing(false)} className=\"ml-2 text-sm text-gray-500 hover:text-gray-700\">\n              Cancel\n            </button>\n          </>\n        ) : (\n          <>\n            <button onClick={() => setIsEditing(true)} className=\"text-sm text-blue-600 hover:text-blue-800 font-semibold\">\n              Edit\n            </button>\n             <button onClick={() => onDelete(row.id)} className=\"ml-2 text-sm text-red-600 hover:text-red-800\">\n              Delete\n            </button>\n          </>\n        )}\n      </td>\n    </tr>\n  );\n};\n\n\n// --- MAIN TABLE COMPONENT ---\nconst EditableTable = ({ columns, data, onSave, onDelete }: EditableTableProps) => {\n  if (!data || data.length === 0) {\n    return <p className=\"text-gray-500\">No data available.</p>;\n  }\n\n  return (\n    <div className=\"overflow-x-auto bg-white rounded-lg shadow\">\n      <table className=\"w-full\">\n        <thead>\n          <tr className=\"bg-gray-100 text-left\">\n            {columns.map(col => (\n              <th key={col.key} className=\"p-2 font-semibold text-sm\">{col.header}</th>\n            ))}\n            <th className=\"p-2\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((row) => (\n            <EditableRow key={row.id} row={row} columns={columns} onSave={onSave} onDelete={onDelete} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default EditableTable;\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAkBA,wBAAwB;AACxB,2DAA2D;AAC3D,MAAM,cAAc;QAAC,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAA2H;;IAC9K,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IACvC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IAEzC,MAAM,aAAa;QACjB,YAAY;QACZ,MAAM,UAAU,MAAM,OAAO;QAC7B,IAAI,SAAS;YACX,aAAa;QACf;QACA,YAAY;IACd;IAEA,MAAM,eAAe,CAAC,KAAa;QACjC,WAAW;YAAE,GAAG,OAAO;YAAE,CAAC,IAAI,EAAE;QAAM;IACxC;IAEA,qBACE,6LAAC;QAAG,WAAU;;YACX,QAAQ,GAAG,CAAC,CAAA,oBACX,6LAAC;oBAAiB,WAAU;8BACzB,YACC,IAAI,IAAI,KAAK,2BACX,6LAAC;wBACC,OAAO,OAAO,CAAC,IAAI,GAAG,CAAC;wBACvB,UAAU,CAAC,IAAM,aAAa,IAAI,GAAG,EAAE,EAAE,MAAM,CAAC,KAAK;wBACrD,WAAU;wBACV,MAAM;;;;;iFAGR,6LAAC;wBACC,MAAK;wBACL,OAAO,OAAO,CAAC,IAAI,GAAG,CAAC;wBACvB,UAAU,CAAC,IAAM,aAAa,IAAI,GAAG,EAAE,EAAE,MAAM,CAAC,KAAK;wBACrD,WAAU;;;;;iFAId,6LAAC;wBAAK,WAAU;kCAAgB,OAAO,CAAC,IAAI,GAAG,CAAC;;;;;;mBAlB3C,IAAI,GAAG;;;;;0BAsBlB,6LAAC;gBAAG,WAAU;0BACX,0BACC;;sCACE,6LAAC;4BAAO,SAAS;4BAAY,UAAU;4BAAU,WAAU;sCACxD,WAAW,cAAc;;;;;;sCAE5B,6LAAC;4BAAO,SAAS,IAAM,aAAa;4BAAQ,WAAU;sCAAiD;;;;;;;iDAKzG;;sCACE,6LAAC;4BAAO,SAAS,IAAM,aAAa;4BAAO,WAAU;sCAA0D;;;;;;sCAG9G,6LAAC;4BAAO,SAAS,IAAM,SAAS,IAAI,EAAE;4BAAG,WAAU;sCAA+C;;;;;;;;;;;;;;;;;;;AAQ/G;GAlEM;KAAA;AAqEN,+BAA+B;AAC/B,MAAM,gBAAgB;QAAC,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAsB;IAC5E,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,qBAAO,6LAAC;YAAE,WAAU;sBAAgB;;;;;;IACtC;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAM,WAAU;;8BACf,6LAAC;8BACC,cAAA,6LAAC;wBAAG,WAAU;;4BACX,QAAQ,GAAG,CAAC,CAAA,oBACX,6LAAC;oCAAiB,WAAU;8CAA6B,IAAI,MAAM;mCAA1D,IAAI,GAAG;;;;;0CAElB,6LAAC;gCAAG,WAAU;;;;;;;;;;;;;;;;;8BAGlB,6LAAC;8BACE,KAAK,GAAG,CAAC,CAAC,oBACT,6LAAC;4BAAyB,KAAK;4BAAK,SAAS;4BAAS,QAAQ;4BAAQ,UAAU;2BAA9D,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;AAMpC;MAxBM;uCA0BS","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///Users/gnickles/Desktop/AspFumi_Site/src/app/admin/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport EditableTable from '@/components/EditableTable'; // Corrected the import path\n\n// --- Interfaces for our data ---\nexport interface LabMetadata {\n  id: string; // A unique ID is crucial for editing/deleting\n  timestamp: string;\n  lab_name: string;\n  institution: string;\n  city: string;\n  state: string;\n  country: string;\n  contact_name: string;\n  contact_email: string;\n  research_use: string;\n  comments: string;\n  latitude: string;\n  longitude: string;\n  match_level: string;\n}\n\nexport interface IsolateData {\n  id: string; // A unique ID\n  timestamp: string;\n  submitting_lab: string;\n  strain_name: string;\n  strain_origin: string;\n  strain_center_name?: string;\n  strain_center_location?: string;\n  strain_center_date?: string;\n  sharing_lab_name?: string;\n  sharing_lab_institute?: string;\n  sharing_lab_location?: string;\n  genotype_details_json: string;\n  other_genes_json: string;\n  other_mutations: string;\n}\n\n// --- Interface for table column definitions ---\ninterface Column {\n  key: string;\n  header: string;\n  type?: 'text' | 'textarea';\n}\n\nexport default function AdminPage() {\n  const [labSubmissions, setLabSubmissions] = useState<LabMetadata[]>([]);\n  const [isolateSubmissions, setIsolateSubmissions] = useState<IsolateData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState<'metadata' | 'isolates'>('metadata');\n  const [error, setError] = useState<string | null>(null);\n\n  // --- Data Fetching ---\n  useEffect(() => {\n    const loadAllData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        // Fetch both datasets in parallel\n        const [labRes, isolateRes] = await Promise.all([\n          fetch('/api/admin/metadata'),\n          fetch('/api/admin/isolates')\n        ]);\n\n        if (!labRes.ok || !isolateRes.ok) {\n          throw new Error('Failed to fetch one or more data sources.');\n        }\n\n        const labData = await labRes.json();\n        const isolateData = await isolateRes.json();\n\n        setLabSubmissions(labData.submissions || []);\n        setIsolateSubmissions(isolateData.submissions || []);\n\n      } catch (err) {\n        console.error(err);\n        setError('Failed to load submission data. Please check the server logs.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadAllData();\n  }, []);\n\n  // --- Data Saving and Deleting Handlers ---\n  const handleSave = async (updatedRow: any, endpoint: 'metadata' | 'isolates') => {\n    try {\n      const response = await fetch(`/api/admin/${endpoint}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updatedRow),\n      });\n      if (!response.ok) throw new Error('Failed to save data.');\n      \n      // Refresh local data to show changes\n      if (endpoint === 'metadata') {\n        setLabSubmissions(labs => labs.map(lab => lab.id === updatedRow.id ? updatedRow : lab));\n      } else {\n        setIsolateSubmissions(isos => isos.map(iso => iso.id === updatedRow.id ? updatedRow : iso));\n      }\n      return true; // Indicate success\n    } catch (error) {\n      console.error('Save failed:', error);\n      alert('Error saving data. Please check the console.');\n      return false; // Indicate failure\n    }\n  };\n  \n  const handleDelete = async (id: string, endpoint: 'metadata' | 'isolates') => {\n    if (!confirm('Are you sure you want to delete this row? This action cannot be undone.')) return;\n    try {\n      const response = await fetch(`/api/admin/${endpoint}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ id }),\n      });\n       if (!response.ok) throw new Error('Failed to delete data.');\n       \n       // Refresh local data\n       if (endpoint === 'metadata') {\n         setLabSubmissions(labs => labs.filter(lab => lab.id !== id));\n       } else {\n         setIsolateSubmissions(isolates => isolates.filter(iso => iso.id !== id));\n       }\n    } catch (error) {\n       console.error('Delete failed:', error);\n       alert('Error deleting data. Please check the console.');\n    }\n  };\n\n\n  // --- Column Definitions for the Tables ---\n  const labColumns: Column[] = [\n    { key: 'lab_name', header: 'Lab Name' },\n    { key: 'institution', header: 'Institution' },\n    { key: 'city', header: 'City' },\n    { key: 'country', header: 'Country' },\n    { key: 'contact_email', header: 'Contact' },\n    { key: 'latitude', header: 'Lat' },\n    { key: 'longitude', header: 'Lng' },\n    { key: 'match_level', header: 'Match' },\n  ];\n\n  const isolateColumns: Column[] = [\n    { key: 'submitting_lab', header: 'Submitting Lab' },\n    { key: 'strain_name', header: 'Strain Name' },\n    { key: 'strain_origin', header: 'Origin' },\n    { key: 'genotype_details_json', header: 'Genotype (JSON)', type: 'textarea' },\n    { key: 'other_genes_json', header: 'Other Genes (JSON)', type: 'textarea' },\n  ];\n\n  // --- Summary Statistics ---\n  const labIsolateCounts = labSubmissions.reduce((acc, lab) => {\n    const count = isolateSubmissions.filter(iso => iso.submitting_lab === lab.lab_name).length;\n    acc[lab.lab_name] = count;\n    return acc;\n  }, {} as Record<string, number>);\n\n  if (loading) return <div>Loading Admin Dashboard...</div>;\n  if (error) return <div className=\"text-red-500\">{error}</div>;\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-4 md:p-6\">\n      <h1 className=\"text-2xl md:text-3xl font-bold mb-6\">Admin Dashboard</h1>\n\n      {/* Summary Stats */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n        <div className=\"p-4 bg-blue-100 rounded-lg shadow\">\n            <p className=\"text-3xl font-bold text-blue-800\">{labSubmissions.length}</p>\n            <p className=\"text-sm text-blue-600\">Total Labs Submitted</p>\n        </div>\n        <div className=\"p-4 bg-green-100 rounded-lg shadow\">\n            <p className=\"text-3xl font-bold text-green-800\">{isolateSubmissions.length}</p>\n            <p className=\"text-sm text-green-600\">Total Isolates Submitted</p>\n        </div>\n         <div className=\"p-4 bg-purple-100 rounded-lg shadow\">\n            <p className=\"text-3xl font-bold text-purple-800\">\n              {labSubmissions.length > 0 ? (isolateSubmissions.length / labSubmissions.length).toFixed(1) : 0}\n            </p>\n            <p className=\"text-sm text-purple-600\">Avg. Isolates per Lab</p>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"flex border-b mb-4\">\n        <button onClick={() => setActiveTab('metadata')} className={`py-2 px-4 ${activeTab === 'metadata' ? 'border-b-2 border-blue-500 font-semibold' : ''}`}>\n          Lab Metadata ({labSubmissions.length})\n        </button>\n        <button onClick={() => setActiveTab('isolates')} className={`py-2 px-4 ${activeTab === 'isolates' ? 'border-b-2 border-blue-500 font-semibold' : ''}`}>\n          Isolate Submissions ({isolateSubmissions.length})\n        </button>\n      </div>\n\n      {/* Tables */}\n      {activeTab === 'metadata' ? (\n        <EditableTable\n          columns={labColumns}\n          data={labSubmissions}\n          onSave={(row) => handleSave(row, 'metadata')}\n          onDelete={(id) => handleDelete(id, 'metadata')}\n        />\n      ) : (\n        <EditableTable\n          columns={isolateColumns}\n          data={isolateSubmissions}\n          onSave={(row) => handleSave(row, 'isolates')}\n          onDelete={(id) => handleDelete(id, 'isolates')}\n        />\n      )}\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}